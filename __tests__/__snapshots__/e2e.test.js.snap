// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`E2E --help 1`] = `
Object {
  "stderr": "",
  "stdout": "Options:
  --help       Show help                                               [boolean]
  --version    Show version number                                     [boolean]
  --set, -i    Set upstream to a remote               [boolean] [default: false]
  --force, -f  Force overwrite even if upstream already exists
                                                      [boolean] [default: false]
  --token, -t  GitHub access token for private repository               [string]
  --shallow    Prefer parent fork(default) or ancestor fork
                                                       [boolean] [default: true]
  --https      Set https url to remote, otherwise set ssh url
                                                      [boolean] [default: false]

Examples:
  npx git-upstream                     Show upstream url
  npx git-upstream --set               Set upstream with confirmation
  npx git-upstream --set -f            Set upstream even if upstream already
                                       exists
  npx git-upstream --set --https       Set https://...
  npx git-upstream --set --no-shallow  For deep nested fork
",
}
`;

exports[`E2E --set 1`] = `
Object {
  "stderr": "(node:30113) UnhandledPromiseRejectionWarning: Error: Invalid stream passed
    at Function.keypress.listen (/home/leko/.ghq/github.com/Leko/git-upstream/node_modules/enquirer/lib/keypress.js:191:11)
    at ConfirmPrompt.start (/home/leko/.ghq/github.com/Leko/git-upstream/node_modules/enquirer/lib/prompt.js:169:28)
    at ConfirmPrompt.initialize (/home/leko/.ghq/github.com/Leko/git-upstream/node_modules/enquirer/lib/prompt.js:196:16)
    at ConfirmPrompt.initialize (/home/leko/.ghq/github.com/Leko/git-upstream/node_modules/enquirer/lib/types/boolean.js:15:17)
    at processTicksAndRejections (internal/process/task_queues.js:85:5)
    at async /home/leko/.ghq/github.com/Leko/git-upstream/node_modules/enquirer/lib/prompt.js:212:7
(node:30113) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 2)
(node:30113) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
",
  "stdout": "upstream is git@github.com:nodejs/node.git
[?25l[?25h",
}
`;
